п»ї// Task_1 РћС†РµРЅРєР° Р°Р»РіРѕСЃР»РѕР¶РЅРѕСЃС‚Рё РїСЂРѕРіСЂР°РјРјС‹
/*
Р”Р°РЅ РєРѕРґ РЅР° СЏР·С‹РєРµ C++. Р’Р°С€Р° Р·Р°РґР°С‡Р° РїРѕРЅСЏС‚СЊ Рё РѕРїРёСЃР°С‚СЊ, С‡С‚Рѕ РѕРЅ РґРµР»Р°РµС‚, 
РѕРїСЂРµРґРµР»РёС‚СЊ РµРіРѕ Р°СЃРёРјРїС‚РѕС‚РёРєСѓ, С‚Рѕ РµСЃС‚СЊ РІСЂРµРјСЏ Рё РґРѕРїРѕР»РЅРёС‚РµР»СЊРЅСѓСЋ РїР°РјСЏС‚СЊ, 
Рё РїСЂРёРІРµСЃС‚Рё Р°СЂРіСѓРјРµРЅС‚С‹, РїРѕС‡РµРјСѓ РѕРЅР° РёРјРµРЅРЅРѕ С‚Р°РєР°СЏ.

РџСЂР°РІРёР»Р° РїСЂРёС‘РјР° РґРѕРјР°С€РЅРµР№ СЂР°Р±РѕС‚С‹
Р—Р°РґР°РЅРёРµ РЅСѓР¶РЅРѕ СЃРґР°РІР°С‚СЊ, СѓРєР°Р·С‹РІР°СЏ СЃР»РѕР¶РЅРѕСЃС‚СЊ Р°Р»РіРѕСЂРёС‚РјР° РїРѕ СЃРєРѕСЂРѕСЃС‚Рё Рё РїРѕ РїР°РјСЏС‚Рё.
Р РµР·СѓР»СЊС‚Р°С‚РѕРј РІС‹РїРѕР»РЅРµРЅРёСЏ Р·Р°РґР°РЅРёСЏ РґРѕР»Р¶РµРЅ Р±С‹С‚СЊ С‚РµРєСЃС‚РѕРІС‹Р№ РѕС‚РІРµС‚, РЅР°РїРёСЃР°РЅРёРµ РєРѕРґР° РЅРµ С‚СЂРµР±СѓРµС‚СЃСЏ.
*/

#include <iostream>
#include <chrono>
#include <Windows.h>
#include <iomanip>

 int COUNT{ 0 };

 // РћРўР’Р•Рў:_____________________
 // С„СѓРЅРєС†РёСЏ РІС‹С‡РёСЃР»СЏРµС‚ СЃСѓРјРјСѓ СЂР°Р·РЅРѕСЃС‚РµР№ РјРµР¶РґСѓ С‡Р»РµРЅР°РјРё РјР°СЃСЃРёРІР° 
 // РїРѕСЃР»РµРґРѕРІР°С‚РµР»СЊРЅРѕ РїРµСЂРµР±РёСЂР°СЏ РјР°СЃСЃРёРІ РЅР°С‡РёРЅР°СЏ СЃРѕ РІС‚РѕСЂРѕРіРѕ СЌР»РµРјРµРЅС‚Р°
 // РІСЂРµРјСЏ РІС‹РїРѕР»РЅРЅРµРёСЏ С„СѓРЅРєС†Рё РЅР°РїСЂСЏРјСѓСЋ Р·Р°РІРёСЃРёС‚ РѕС‚ РєРѕР»РёС‡РµСЃС‚РІР° РґР°РЅРЅС‹С… РІ РјР°СЃСЃРёРІРµ Рћ(n)
 // РґР»СЏ РёРЅС‚РµСЂРµСЃР° РґРѕР±Р°РІРёР» РїСЂСЏРјРѕР№ РїРѕРґСЃС‡РµС‚ РІСЂРµРјРµРЅРё - С‡С‚РѕР±С‹ РїРѕРєР°Р·Р°С‚СЊ С‡С‚Рѕ СЌС‚РѕС‚ СЃРїРѕСЃРѕР± РЅРµ СЃРѕРІСЃРµРј РєРѕСЂСЂРµРєС‚РµРЅ
 // РґР»СЏ РѕРїСЂРµРґРµР»РµРЅРёСЏ РІСЂРµРјРµРЅРё СЂР°Р±РѕС‚С‹ РїСЂРѕРіСЂР°РјРјС‹.

int calc(int* arr, int size)
{
    COUNT = 1;
    int ans = 0;

    for (int i = 1; i < size; i++)
    {
        ans += arr[i] - arr[i - 1];
        ++COUNT;
    }
    return ans;
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int arr_1[3]    { 1,2,3 };
    int arr_2[10]   { 1,2,3,4,5,6,7,8,9,10 };
    int arr_3[20]   { 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20 };

    auto start_x = std::chrono::high_resolution_clock::now();
    auto end_x = std::chrono::high_resolution_clock::now();
    auto dur = std::chrono::duration_cast<std::chrono::microseconds> (end_x - start_x);

    std::cout << std::fixed;
    std::cout << std::setprecision(10);
   
    for (int i=0;i<5;++i){
        std::cout << "РџСЂРѕРіРѕРЅ: " << i+1 << std::endl;

         start_x = std::chrono::high_resolution_clock::now();
        std::cout << "Р РµР·СѓР»СЊС‚Р°С‚ С„СѓРЅРєС†РёРё: " << calc(arr_1, 3) << "\tCС‡РµС‚ С†РёРєР»РѕРІ: " << COUNT <<"\t";
         end_x = std::chrono::high_resolution_clock::now();
         dur = std::chrono::duration_cast<std::chrono::microseconds> (end_x - start_x);
        std::cout << "Р’СЂРµРјСЏ РІС‹РїРѕР»РЅРµРЅРёСЏ, РјР»СЃРµРє.:  " << dur.count() << std::endl;

         start_x = std::chrono::high_resolution_clock::now();
        std::cout << "Р РµР·СѓР»СЊС‚Р°С‚ С„СѓРЅРєС†РёРё: " << calc(arr_2, 10) << "\tCС‡РµС‚ С†РёРєР»РѕРІ: " << COUNT << "\t";
         end_x = std::chrono::high_resolution_clock::now();
         dur = std::chrono::duration_cast<std::chrono::microseconds> (end_x - start_x);
        std::cout << "Р’СЂРµРјСЏ РІС‹РїРѕР»РЅРµРЅРёСЏ, РјР»СЃРµРє.:  " << dur.count() << std::endl;

         start_x = std::chrono::high_resolution_clock::now();
        std::cout << "Р РµР·СѓР»СЊС‚Р°С‚ С„СѓРЅРєС†РёРё: " << calc(arr_3, 20) << "\tCС‡РµС‚ С†РёРєР»РѕРІ: " << COUNT << "\t";
         end_x = std::chrono::high_resolution_clock::now();
         dur = std::chrono::duration_cast<std::chrono::microseconds> (end_x - start_x);
        std::cout << "Р’СЂРµРјСЏ РІС‹РїРѕР»РЅРµРЅРёСЏ, РјР»СЃРµРє.:  " << dur.count() << std::endl;


       std::cout << "----------------------------------" << std::endl;
    }
    
    return 1;
}
